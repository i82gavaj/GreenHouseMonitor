@model TFGv1_1.Models.GreenHouse

@{
    ViewBag.Title = "Editar Invernadero";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.GreenHouseID)
    @Html.HiddenFor(model => model.UserID)
    
    <div class="index-container">
        <div class="index-header">
            <h2 class="index-title">
                <i class="fas fa-leaf me-2"></i>@ViewBag.Title
            </h2>
        </div>

        <div class="card">
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group row mb-3">
                    @Html.LabelFor(model => model.Name, "Nombre", new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Ej: Invernadero Principal" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mb-3">
                    @Html.LabelFor(model => model.Description, "Descripción", new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "3", placeholder = "Ej: Invernadero para cultivo de tomates y pimientos" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        <small class="form-text text-muted">La descripción es opcional y puede tener hasta 200 caracteres</small>
                    </div>
                </div>

                <div class="form-group row mb-3">
                    @Html.LabelFor(model => model.Location, "Ubicación", new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", placeholder = "Ej: Patio Trasero" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mb-3">
                    @Html.LabelFor(model => model.Area, "Área (m²)", new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", min = "0", placeholder = "Ej: 25.5" } })
                        @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                        <small class="form-text text-muted">Ingrese el área en metros cuadrados</small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="offset-md-2 col-md-10">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fas fa-save me-2"></i>Guardar
                        </button>
                        @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-secondary" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
