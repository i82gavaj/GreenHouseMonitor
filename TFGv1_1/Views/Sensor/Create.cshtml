@model TFGv1_1.Models.Sensor

@{
    ViewBag.Title = "Crear Sensor";
}

<div class="form-container">
    <h2 class="form-title">@ViewBag.Title</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.GreenHouseID, "Invernadero", new { @class = "control-label" })
                <div class="form-input">
                    @Html.DropDownListFor(model => model.GreenHouseID, 
                        (IEnumerable<SelectListItem>)ViewBag.GreenHouses, 
                        "Seleccione un invernadero", 
                        new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.GreenHouseID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SensorName, "Nombre del Sensor", new { @class = "control-label" })
                <div class="form-input">
                    @Html.EditorFor(model => model.SensorName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.SensorName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SensorType, "Tipo de Sensor", new { @class = "control-label" })
                <div class="form-input">
                    @Html.DropDownListFor(model => model.SensorType, 
                        new SelectList(ViewBag.SensorTypes), 
                        "Seleccione un tipo", 
                        new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.SensorType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Units, "Unidades", new { @class = "control-label" })
                <div class="form-input">
                    @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Units, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Topic, "Topic", new { @class = "control-label" })
                <div class="form-input">
                    @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-actions">
                <input type="submit" value="Crear" class="btn btn-primary" />
                @Html.ActionLink("Volver a la Lista", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
