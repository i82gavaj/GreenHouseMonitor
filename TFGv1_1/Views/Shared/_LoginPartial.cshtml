@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using TFGv1_1.Models
@using Microsoft.AspNet.Identity.Owin
@using Microsoft.Owin

@if (Request.IsAuthenticated)
{
    try
    {
        var userId = User.Identity.GetUserId();
        var userName = User.Identity.Name; // Obtener el nombre de usuario directamente de la identidad
        
        // Intentar obtener el usuario de la base de datos de forma segura
        ApplicationUser user = null;
        try
        {
            // Obtener el contexto OWIN de forma segura
            var owinContext = Request.GetOwinContext();
            if (owinContext != null)
            {
                var userManager = owinContext.GetUserManager<ApplicationUserManager>();
                if (userManager != null && !string.IsNullOrEmpty(userId))
                {
                    user = userManager.FindById(userId);
                }
            }
        }
        catch (Exception)
        {
            // Ignorar errores al obtener el usuario
        }

        <ul class="navbar-nav navbar-right">
            <li>
                @if (user != null)
                {
                    @Html.ActionLink("Hola " + user.UserName + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage", @class = "nav-link" })
                }
                else
                {
                    @Html.ActionLink("Hola " + userName + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage", @class = "nav-link" })
                }
            </li>
            <li>
                @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-link navbar-btn navbar-link nav-link">Cerrar sesi&oacute;n</button>
                }
            </li>
        </ul>
    }
    catch (Exception)
    {
        // En caso de cualquier error, mostrar un enlace gen√©rico
        <ul class="navbar-nav navbar-right">
            <li>
                @Html.ActionLink("Mi Cuenta", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage", @class = "nav-link" })
            </li>
            <li>
                @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-link navbar-btn navbar-link nav-link">Cerrar sesi&oacute;n</button>
                }
            </li>
        </ul>
    }
}
else
{
    <ul class="navbar-nav navbar-right">
        <li>@Html.ActionLink("Registrarse", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "nav-link" })</li>
        <li>@Html.ActionLink("Iniciar sesion", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", @class = "nav-link" })</li>
    </ul>
}
